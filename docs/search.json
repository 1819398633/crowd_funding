[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Crowdfunding Analysis Project",
    "section": "",
    "text": "1 Introduction\nIn recent years, crowdfunding has become very prevalent, especially for aspiring entrepreneurs who are hoping to raise money for their projects. Crowdfunding allows people and organizations to raise money for their projects, while also allowing donors to support the causes that they believe in. There have been many successful crowdfunding projects over the years, created by both creative artists and companies. There are two main types of crowdfunding projects, rewards crowdfunding and equity crowdfunding. Rewards crowdfunding is described as a way for entrepreneurs to pre-sell a product or service, while equity crowdfunding is a way for the supporters to purchase unlisted shares of a company. The rise of social media has also made it easier to share crowdfunding projects, drawing the attention of people from around the world to support the project.\nKickstarter is one of the largest and most notable crowdfunding platforms. It is a website where individuals and organizations can post their projects, and backers can pledge money to projects that interest them. If the project is successful, then the pledge will go through; otherwise, the money is returned to the backers. Some crowdfunding projects on Kickstarter were very successful; for example, Coolest Cooler raised over $13 million to create a cooler, while artists such as Amanda Palmer and Zach Braff were able to raise $1.2 million and $3 million, respectively, for their creative endeavors. However, many crowdfunding projects fail to meet their target amount.\nWe are interested in exploring the different types of crowdfunding projects, specifically on Kickstarter. Where are the project creators located, and what types of projects are more common? We would also like to see if some projects are more likely to succeed than other projects, based on the characteristics of those projects, project pages, and the creators of the projects. What is the distribution of the target amount of donations that the projects hope to raise, and what is the distribution of the amount that is actually pledged? We could also explore the effects of social media on the success of the projects. We would also like to gain insight on the behaviors of project backers, specifically to see if this behavior differs for projects that were successful versus projects that were unsuccessful.\nSources: https://www.entrepreneur.com/starting-a-business/crowdfunding-generates-more-than-60000-an-hour/234051 https://www.theguardian.com/technology/2014/apr/17/kickstarter-crowdfunding-technology-film-games"
  },
  {
    "objectID": "data.html#description",
    "href": "data.html#description",
    "title": "2  Data",
    "section": "2.1 Description",
    "text": "2.1 Description\nTo understand the different types of projects that are on Kickstarter, we could look at the projects by category. Whether the project is successful or not is indicated by the State column, so we can facet based on State to determine if there are distinguishing characteristics specific to the projects that are successful. The dataset also provides information about the creator, such as the number of Facebook friends that they have if they’ve connected their Facebook to their page, and the number of Facebook shares for their project. For the categorical variables, such as whether or not the project page is connected to Facebook and whether or not the project page has a video, we can create mosaic plots to see if these features are related to the average success rate of the project.\nThe dataset also contains information about the creator pages, including the number of other projects that the creator has created, as well as the amount of content of these pages (including the number of images and videos, the number of words in the Description and Risks and Challenges sections, and the number of FAQs). We are also given information about how many backers there were for each project, as well as the number of Facebook shares throughout the course of the project and the total duration of the project. These are all numerical quantities, for which we could create data visualizations. In particular, we could look at how these numerical variables are related to the final amount pledged for each of these projects.\nWe can also use the Goal column to visualize the target amount of donations for the projects, as well as the Pledged column to display the amount of money that the backers promise to give (if the project is successful). Since different currencies are used for the projects, we would have to standardize to USD.\nSince we are given the locations the projects, we can plot the projects on a world map. This can give us an idea of where in the world these projects are located, and it allows us to see the regions where Kickstarter is more commonly used."
  },
  {
    "objectID": "data.html#data-pre-processing",
    "href": "data.html#data-pre-processing",
    "title": "2  Data",
    "section": "2.2 Data Pre-processing",
    "text": "2.2 Data Pre-processing\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.3     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nFirst, we read the raw data.\n\n\nCode\nraw_df &lt;- read_tsv(\"https://raw.githubusercontent.com/1819398633/crowd_funding/master/18k_Projects.csv\", show_col_types = FALSE)\nraw_df &lt;- raw_df %&gt;% select(c(-Url, -`Start Timestamp (UTC)`, -`End Timestamp (UTC)`))\n\n\nWe observe that there are 5 duplicated rows and 64 duplicated IDs.\n\n\nCode\n# duplicate rows (5)\nnrow(raw_df) - nrow(raw_df %&gt;% distinct())\n\n\n[1] 5\n\n\nCode\n# duplicate ID: 64\nnrow(raw_df %&gt;% distinct()) - nrow(raw_df %&gt;% distinct() %&gt;%  distinct(Id, .keep_all=TRUE))\n\n\n[1] 64\n\n\nRemove duplication. For samples with the same ID, select the one with fewer missing values.\n\n\nCode\nclean_df &lt;- raw_df %&gt;% distinct()\n\n# get NA number for each row\nclean_df &lt;- clean_df %&gt;% \n  mutate(na_num = rowSums(is.na(.)))\n\n# for each ID, select the one with fewer NAs\n# Keep only one for those with same number of NAs\nclean_df &lt;- clean_df %&gt;% \n  group_by(Id) %&gt;% \n  slice_min(na_num, n=1) %&gt;% \n  distinct(Id, .keep_all=TRUE) %&gt;% as_tibble()\n# 69 duplications removed\n# nrow(raw_df) - nrow(clean_df)\n\n\nCheck feature data types and ensure that the types are already converted.\n\n\nCode\n# glimpse(clean_df) %&gt;% head()\n# already converted\n# too long, output not included here\n\n\nTransform currency features into the same unit (USD) and apply log transformations.\n\n\nCode\nclean_df &lt;- clean_df %&gt;% mutate(Pledged_USD=case_when(Currency==\"USD\"~Pledged, \n                                            Currency==\"CAD\"~0.74*Pledged, \n                                            Currency==\"AUD\"~0.66*Pledged, \n                                            Currency==\"GBP\"~1.26*Pledged, \n                                            Currency==\"EUR\"~1.08*Pledged, \n                                            Currency==\"NZD\"~0.61*Pledged))\nclean_df &lt;- clean_df %&gt;% mutate(Goal_USD=case_when(Currency==\"USD\"~Goal, \n                                         Currency==\"CAD\"~0.74*Goal, \n                                         Currency==\"AUD\"~0.66*Goal, \n                                         Currency==\"GBP\"~1.26*Goal, \n                                         Currency==\"EUR\"~1.08*Goal, \n                                         Currency==\"NZD\"~0.61*Goal))\n\nclean_df &lt;- clean_df %&gt;% mutate(log_pledged_usd=log(Pledged_USD), log_goal_usd=log(Goal_USD)) \n\n\nWe noticed that the spacial coordinates were missing for many of the observations. Thus, we gathered the locations where the coordinate values were not null, and we also used ChatGPT and Google to get the coordinates of locations where no coordinates were provided. We compiled this into the location_coordinates.csv file. To get the spacial coordinates of the locations for data visualizations later, we joined this file with our original dataset and filled in the coordinate values, where available.\n\n\nCode\nlocations_cleaned &lt;- read.csv(\"https://raw.githubusercontent.com/1819398633/crowd_funding/master/location_coordinates.csv\") \n\nclean_df &lt;- left_join(clean_df, locations_cleaned, by=\"Location\", multiple=\"first\") %&gt;% \n  mutate(Latitude=ifelse(is.na(Latitude), latitude, Latitude),\n         Longitude=ifelse(is.na(Longitude), longitude, Longitude)) %&gt;% select(-latitude, -longitude)\n\n\nCheck for outliers and abnormalities: We checked the goal amount. There is a project with extreme high goal value of 100 million USD, 0 updates and only 1 dollar pledged. This is 10 times larger than the second largest Goal value and clearly an outlier, so we removed it.\n\n\nCode\n# normal\nclean_df %&gt;% slice_min(n=10, order_by = Goal_USD) %&gt;% pull(Goal_USD)\n\n\n [1]  66  74  74  74  74  74  99 100 100 100 100 100 100 100 100 100 100 100 100\n[20] 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n[39] 100 100 100 100 100 100 100 100 100 100\n\n\nCode\n# outlier exist\nclean_df %&gt;% slice_max(n=10, order_by = Goal_USD) %&gt;% pull(Goal_USD)\n\n\n [1] 1.00e+08 8.00e+06 7.00e+06 6.10e+06 6.00e+06 5.00e+06 3.63e+06 3.00e+06\n [9] 2.96e+06 2.80e+06\n\n\nCode\nclean_df %&gt;% slice_max(n=1, order_by = Goal_USD)\n\n\n# A tibble: 1 × 37\n        Id Name  State Currency `Top Category` Category Creator Location Updates\n     &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;    &lt;chr&gt;          &lt;chr&gt;    &lt;chr&gt;   &lt;chr&gt;      &lt;dbl&gt;\n1   1.81e9 The … fail… USD      Film & Video   Shorts   Chris … Denver         0\n# ℹ 28 more variables: Comments &lt;dbl&gt;, Rewards &lt;dbl&gt;, Goal &lt;dbl&gt;,\n#   Pledged &lt;dbl&gt;, Backers &lt;dbl&gt;, Start &lt;date&gt;, End &lt;date&gt;,\n#   `Duration in Days` &lt;dbl&gt;, `Facebook Connected` &lt;chr&gt;,\n#   `Facebook Friends` &lt;dbl&gt;, `Facebook Shares` &lt;dbl&gt;, `Has Video` &lt;chr&gt;,\n#   Latitude &lt;dbl&gt;, Longitude &lt;dbl&gt;, `Creator Bio` &lt;chr&gt;,\n#   `Creator Website` &lt;chr&gt;, `Creator - # Projects Created` &lt;dbl&gt;,\n#   `Creator - # Projects Backed` &lt;dbl&gt;, `# Videos` &lt;dbl&gt;, `# Images` &lt;dbl&gt;, …\n\n\nCode\nclean_df = clean_df %&gt;% filter(Goal_USD &lt; 1e7)\n\n\nRename columns, select necessary columns, and store the clean data for plotting.\n\n\nCode\nclean_df &lt;- clean_df %&gt;% rename(Top_Category = `Top Category`)\n# clean_df %&gt;%\n#   select(c(-`Creator Bio`,\n#            -`Creator Website`,\n#            -na_num,\n#            -Pledged,\n#            -Goal)) %&gt;%\n#   write_csv(\"18k_Projects_clean.csv\")"
  },
  {
    "objectID": "data.html#missing-value-analysis",
    "href": "data.html#missing-value-analysis",
    "title": "2  Data",
    "section": "2.3 Missing value analysis",
    "text": "2.3 Missing value analysis\nFor the purpose of the analysis, we use data generated by the code above with ancillary features.\nThe table below shows the number of missing values in the columns.\n\n\nCode\ncol_na = colSums(is.na(clean_df)) %&gt;%\n  sort(decreasing = TRUE)\ncol_na = col_na[col_na &gt; 0]\ncol_na\n\n\n               Creator Website               Facebook Friends \n                          6604                           5837 \n   Creator - # Projects Backed                       Latitude \n                          4239                             85 \n                     Longitude                       # Videos \n                            85                             85 \n# Words (Risks and Challenges) \n                            85 \n\n\nThe latitude and longitude columns have the most missing values, followed by the creator website, Facebook friend number, creator’s number of projects backed, the number of videos on the page, and the number of words in the “Risk and Challenges” section. It seems that the missing values of (Latitude, Longitude) and (# Videos, # Words (Risks and Challenges) feature pairs appear at the same time.\nTo have a further look, we plot the missing value patterns:\n\n\nCode\nclean_df_miss = clean_df %&gt;% \n  select (col_na %&gt;% names())\nnames(clean_df_miss) = c('Lat.', 'Long.', 'Cre.Web.', 'FB.Con.', 'Cre.numB', 'num.Video', 'num.WoRC')\n\nclean_df_miss %&gt;% \n  plot_missing(percent = TRUE)\n\n\nScale for y is already present.\nAdding another scale for y, which will replace the existing scale.\nScale for y is already present.\nAdding another scale for y, which will replace the existing scale.\n\n\n\n\n\nFor features, there are around 50% of the (Latitude, Longitude) pairs missing. Creator Website and Facebook Connected are also common missing values.\nFor data rows, most of them (around 25%) are missing the Facebook Connected information only. This is reasonable for the missing values of the creator’s Facebook and creator’s website, as they may not exist or are not shown on the crowdfunding page.\nWe also identified several patterns:\nFirst, the graph shows that (Latitude, Longitude) and (# Videos, # Words (Risks and Challenges) missing feature pairs appear at the same time. Upon further inspection, we find that it is very similar to `Location`, as the (Latitude, Longitude) coordinates are usually the same for a location. For spacial analysis purposes, we decided to use `Location` only.\nSecond, we find that the missing values of # Videos, # Words (Risks and Challenges) appear together with the missing values of `Creator Website`, Latitude, and Longitude. Such cases are rare, and the values are only missing for projects with end times from January 2014 to March 2014. We checked the crowdfunding webpages and found that the data is accessible. Therefore, manually error or technical issue in data collecting may be the reason for these missing values.\nHere’s the project start and end date ranges.\n\n\nCode\n# get start time range\nclean_df %&gt;% \n  filter(`# Videos` %&gt;% is.na()) %&gt;% \n  select(Start, End) %&gt;% \n  arrange(Start) %&gt;% \n  slice(c(1,n())) %&gt;% pull()\n\n\n[1] \"2014-01-17\" \"2014-03-07\"\n\n\nCode\n# get end time range\nclean_df %&gt;% \n  filter(`# Videos` %&gt;% is.na()) %&gt;% \n  select(Start, End) %&gt;% \n  arrange(End) %&gt;% \n  slice(c(1,n())) %&gt;% pull()\n\n\n[1] \"2014-01-14\" \"2014-03-12\"\n\n\nThird, Facebook Friends is missing if and only if Facebook Connected is False, because the Facebook friend’s information of the creator is not accessible if we don’t know the creator’s Facebook from the webpage.\nThe bar chart shows this result.\n\n\nCode\nclean_df %&gt;% \n  ggplot(aes(x = is.na(`Facebook Friends`))) +\n  geom_bar() +\n  facet_wrap(.~`Facebook Connected`) +\n  labs('Number of missing values in \"Facebook Friends\"') +\n  xlab(\"Number of missing value\")"
  },
  {
    "objectID": "data.html#store-clean-data",
    "href": "data.html#store-clean-data",
    "title": "2  Data",
    "section": "2.4 Store clean data",
    "text": "2.4 Store clean data"
  },
  {
    "objectID": "results.html#summary",
    "href": "results.html#summary",
    "title": "3  Results",
    "section": "3.1 Summary",
    "text": "3.1 Summary\nTODO (non-tech summary on top findings)"
  },
  {
    "objectID": "results.html#import-clean-data",
    "href": "results.html#import-clean-data",
    "title": "3  Results",
    "section": "3.2 Import clean data",
    "text": "3.2 Import clean data\n\n\nCode\nknitr::opts_chunk$set(warning = FALSE, message = FALSE)\nsuppressPackageStartupMessages({\n\n  library(forcats)\n  library(tidyverse)\n  library(dplyr)\n  library(ggplot2)\n  library(readr)\n  library(stringr)\n  library(redav)\n  library(ggplot2)\n  library(egg)\n  library(vcd)\n  library(RColorBrewer)\n  library(plotly)\n  library(GGally)\n  library(scales)\n  \n}\n  \n)\n\n\nWarning: package 'egg' was built under R version 4.3.2\n\n\nWarning: package 'vcd' was built under R version 4.3.2\n\n\nWarning: package 'scales' was built under R version 4.3.2\n\n\n\n\nCode\n# library(forcats)\n# library(tidyverse)\n# library(dplyr)\n# library(ggplot2)\n# library(readr)\n# library(stringr)\n# library(redav)\n# library(ggplot2)\n# library(egg)\n# library(vcd)\n# library(RColorBrewer)\n# library(plotly)\n# library(GGally)\n# library(scales)\n\nproj &lt;- read_csv(\"https://raw.githubusercontent.com/1819398633/crowd_funding/master/18k_Projects_clean.csv\", show_col_types = FALSE)\n\nstate_color &lt;- hue_pal()(2)"
  },
  {
    "objectID": "results.html#what-currency",
    "href": "results.html#what-currency",
    "title": "3  Results",
    "section": "3.3 What currency?",
    "text": "3.3 What currency?\n\n\nCode\nggplot(proj, aes(x=fct_infreq(Currency)))+\n  geom_bar(stat=\"count\") + theme_minimal() + \n  labs(title=\"Currency Used Bar Chart\") + xlab(\"Project Currency\")\n\n\n\n\n\nFor this dataset, the numerical quantities that we are most interested in are Goal (the amount that the creator aims to raise for their project) and Pledged (the amount that the supporters promise to donate to the project if it is successful). These two variables determine the success of the project, as the project is successful if the amount pledged is greater than or equal to the goal amount; otherwise, the project has failed. However, to ensure the validity of our comparisons across projects, we must be careful with the units. Thus, we start by creating a bar chart of the project currencies. A total of six different currencies were used among the 18,000 projects: USD, GBP, CAD, AUD, NZD, and EUR. The currency for most of the projects is USD, so we will be converting Goal and Projected to USD, to make comparisons across the projects."
  },
  {
    "objectID": "results.html#how-much-of-the-goals",
    "href": "results.html#how-much-of-the-goals",
    "title": "3  Results",
    "section": "3.4 How much of the goals?",
    "text": "3.4 How much of the goals?\n\n\nCode\np1&lt;-ggplot(proj, aes(x=(Goal_USD)))+ geom_histogram() + facet_grid(cols=vars(State)) +scale_x_log10() + theme_minimal() + labs(title=\"Histogram and Boxplot of Project Goal (USD)\") + xlab(\"\")\n\np2&lt;-ggplot(proj, aes(x=Goal_USD)) + geom_boxplot() + facet_grid(cols=vars(State)) +scale_x_log10() + theme_minimal() + xlab(\"Project Goal (USD)\")\n\negg::ggarrange(p1, p2, heights=2:1)\n\n\n\n\n\nTo take a closer look at the distribution of the project goal, we created a histogram and boxplot. The histogram is better at showing the overall distribution, while the boxplot highlights the outliers. We also faceted on the state of the project, to see if there are any significant differences for the project goal among the projects that failed and the projects that were successful. The distribution for the project goal is skewed right for both the successful and the failed projects. There are a few very large outlier values, as we can see in the plot above of the log of the project goal amount, though most of the values are clustered near the lower end. The goal of failed projects tends to be slightly higher than the goal of successful projects, though the distributions are pretty similar. We can see that the extreme outliers are among the projects that failed."
  },
  {
    "objectID": "results.html#pledged-amount-vs.-goal",
    "href": "results.html#pledged-amount-vs.-goal",
    "title": "3  Results",
    "section": "3.5 Pledged amount vs. Goal",
    "text": "3.5 Pledged amount vs. Goal\n\n\nCode\ng &lt;- ggplot(proj, aes(x = Goal_USD, y=Pledged_USD, label = Name, color=State)) +\n  geom_point(size = 0.5, alpha = .8) +\n  scale_x_log10() + scale_y_log10() + theme_minimal() +\n  labs(title=\"Project Goal vs. Amount Pledged Scatterplot\") + xlab(\"Project Goal\") +\n  ylab(\"Amount Pledged\") \n\nggplotly(g)\n\n\n\n\n\n\n\nTo compare the project goals to the amount pledged, we plotted these two variables on a scatterplot. We can see that there are rounding patterns in the project goals, as there are gaps in the data, suggesting that people tend to round when stating the goal of their project. Most of the project goal amounts lie within 100,000 USD. Once again, we can see outlier values, particularly among the failed projects, where the creator may have been overly ambitious. We can also see that there is some positive correlation between the amount pledged and the goal for the successful projects, though there is not much correlation between these two values for the projects that were unsuccessful. This indicates that, even for successful projects, the amount pledged usually does not drastically exceed the project goal. We can thus infer that the behavior of the backers is influenced by the progress bar of the projects, or the amount remaining for a project to reach its goal. There is also a quite large range of goal values and pledged values for failed projects; some of the failed projects did not receive any amount of money pledged at all, while some of them were very close to reaching their goal and being successful."
  },
  {
    "objectID": "results.html#which-top-categories-have-a-higher-success-rate",
    "href": "results.html#which-top-categories-have-a-higher-success-rate",
    "title": "3  Results",
    "section": "3.6 Which top categories have a higher success rate?",
    "text": "3.6 Which top categories have a higher success rate?\n\n\nCode\nproj %&gt;% \n  ggplot(aes(x = fct_reorder(Top_Category, -ifelse(State == 'successful', 1,0), mean), fill = State))+\n  geom_bar(position = 'fill') +\n  labs(title = 'Top Category vs. Rate of success') +\n  xlab('ratio') +\n  ylab('Top Category') +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\nAfter looking at the most common categories, we were curious about which categories had the highest proportion of successful projects. Using a stacked bar chart to compare the proportion of successful projects, we found that categories for entertainment like dance, theater, music, comics had the highest proportion of successful projects."
  },
  {
    "objectID": "results.html#do-the-most-popular-projects-categories-also-have-the-highest-success-rate",
    "href": "results.html#do-the-most-popular-projects-categories-also-have-the-highest-success-rate",
    "title": "3  Results",
    "section": "3.7 Do the most popular projects categories also have the highest success rate?",
    "text": "3.7 Do the most popular projects categories also have the highest success rate?\n\n\nCode\nmosaic(State~fct_infreq(Top_Category), proj, direction=c('v', 'h'), highlighting_fill = state_color, \n       main = \"Top Category vs. Rate of success\",\n       title_margins = 4,\n       labeling_args = list(\n  set_varnames = list(`fct_infreq(Top_Category)` = \"Top Categories\", State = \"State\"),\n  rot_labels = c(45, 90),\n  gp_labels = gpar(fontsize = 10),\n  offset_labels = c(1,0),\n  offset_varnames = c(1.5,0)))\n\n\n\n\n\nFrom here, we were curious about whether the most popular project categories for creators were also the most popular categories for the supporters. To do this, we used a mosaic plot to display the relative sizes of each category, as well as the proportion of successful projects in each category. The most common categories are Film & Video, Music, and Publishing, while the least common categories are Crafts and Journalism. The top 3 most popular categories are quite different from each other. Nonetheless, some of the common features that they share are art, entertainment, and digital. For the most part, we found that the most common project categories did not have the highest proportion of successful projects, except for the Music category. On the contrary, several of the least popular categories have the highest success rate."
  },
  {
    "objectID": "results.html#what-categorical-features-are-relevant-with-the-success",
    "href": "results.html#what-categorical-features-are-relevant-with-the-success",
    "title": "3  Results",
    "section": "3.8 What categorical features are relevant with the success?",
    "text": "3.8 What categorical features are relevant with the success?\n\n\nCode\nproj_rename &lt;- proj %&gt;% rename(\n  Has_Video = `Has Video`,\n  Facebook_Connected = `Facebook Connected`\n)\nvcd::mosaic(State~Has_Video + Facebook_Connected, \n            data=proj_rename, \n            direction=c(\"v\", \"v\", \"h\"), \n            highlighting_fill = state_color,\n            labeling_args = list(\n              set_varnames = list(\n                Has_Video = \"Has Video\", \n                Facebook_Connected = \"Facebook Connected\", \n                State=\"State\"))) \n\n\n\n\n\nThere does not seem to be much of a relationship between whether or not the project is Facebook connected and whether or not it was successful. However, projects with a video tend to be more successful than projects without a video."
  },
  {
    "objectID": "results.html#where-are-the-projects",
    "href": "results.html#where-are-the-projects",
    "title": "3  Results",
    "section": "3.9 Where are the projects?",
    "text": "3.9 Where are the projects?\n\n\nCode\nproj_map &lt;- proj %&gt;% filter(!is.na(Latitude)) %&gt;% mutate(lat=round(Latitude), long=round(Longitude)) %&gt;% \n  group_by(lat, long) %&gt;% count()\n\nworld_map &lt;- map_data(\"world\")\nggplot() + geom_polygon(data=world_map, aes(x=long, y=lat, group=group), color=\"grey\", fill=\"white\") + \n  geom_point(data=proj_map, aes(x=long, y=lat), color = hue_pal()(3)[3], alpha=0.7, size=0.9)\n\n\n\n\n\nCode\n  # geom_point(data=proj_map, aes(x=long, y=lat, color=n), alpha=0.3)\n\n\nMost of the projects appear to be located in the United States, with some projects across Europe, along with clusters of projects in Japan, New Zealand, and the east coast of Australia. There are other projects scattered throughout South America, Africa, and Asia."
  },
  {
    "objectID": "results.html#what-numerical-features-are-relevant-with-the-success",
    "href": "results.html#what-numerical-features-are-relevant-with-the-success",
    "title": "3  Results",
    "section": "3.10 What numerical features are relevant with the success?",
    "text": "3.10 What numerical features are relevant with the success?\n\n\nCode\nproj %&gt;% \n  select(State, Backers, `Facebook Shares`, Rewards, log_goal_usd, log_pledged_usd) %&gt;% \n  ggpairs(title=\"Scatterplot Matrix\", \n          columns = 2:6,\n          mapping = aes(color=State),\n          lower = list(continuous = wrap('points', alpha=0.2))\n          )\n\n\n\n\n\nTo take a closer look at the numerical variables, we plotted a scatterplot matrix of the number of backers, the number of Facebook shares, the number of rewards, the log of the project goal in USD, and the log of the amount pledged in USD. There doesn’t appear to be any correlation between the goal of the project and the amount pledged. This makes sense intuitively, because we would assume that people would pledge money to projects that they are interested in, not necessarily to the projects with the highest goals. There is some positive correlation between the number of rewards and the amount of money pledged, suggesting that the promise of rewards can incentivize backers to pledge more money. This could also be because creators who are more dedicated to their project may be more likely to offer rewards, thus increasing the likelihood of success for the project. There is also a positive correlation between the number of Facebook shares and the amount pledged, suggesting that social media can play a role in the successfulness of the project. Lastly, we can see some positive correlation between the number of backers and the amount of money pledged, which makes sense because we would expect the amount of money pledged to be higher if more people want to support the project."
  },
  {
    "objectID": "results.html#significant-numeric-features-related-to-success",
    "href": "results.html#significant-numeric-features-related-to-success",
    "title": "3  Results",
    "section": "3.11 Significant numeric features related to success",
    "text": "3.11 Significant numeric features related to success\n\n\nCode\np_up &lt;- proj %&gt;% \n  ggplot(aes(x = State, y = `Updates`, fill = State)) +\n  geom_boxplot(alpha = 0.5, show.legend = FALSE) +\n  scale_y_log10()+ labs(title = \"State vs. Crowfunding Data\")\n\np_comm &lt;- proj %&gt;% \n  ggplot(aes(x = State, y = `Comments`, fill = State)) +\n  geom_boxplot(alpha = 0.5, show.legend = FALSE) +\n  scale_y_log10()\n\n\np_rew &lt;- proj %&gt;% \n  ggplot(aes(x = State, y = `Rewards`, fill = State)) +\n  geom_boxplot(alpha = 0.5, show.legend = FALSE) +\n  scale_y_log10()\n\n\np_fcs &lt;- proj %&gt;% \n  ggplot(aes(x = State, y = `Facebook Shares`, fill = State)) +\n  geom_boxplot(alpha = 0.5, show.legend = FALSE) +\n  scale_y_log10()\n\negg::ggarrange(p_up, p_comm, p_rew, p_fcs)\n\n\n\n\n\nTODO"
  },
  {
    "objectID": "results.html#more-failure-among-cases-with-more-than-500-words-in-risk-and-challenges-section",
    "href": "results.html#more-failure-among-cases-with-more-than-500-words-in-risk-and-challenges-section",
    "title": "3  Results",
    "section": "3.12 more failure among cases with more than 500 words in risk and challenges section",
    "text": "3.12 more failure among cases with more than 500 words in risk and challenges section\n\n\nCode\np_wrc &lt;- proj %&gt;% \n  ggplot(aes(x = State, y = `# Words (Risks and Challenges)`, fill = State)) +\n  geom_boxplot(alpha = 0.5, show.legend = FALSE) +\n  scale_y_log10() +labs(title = \"All projects\")\n\np_wrc500 &lt;- proj %&gt;% \n  filter(`# Words (Risks and Challenges)` &gt;= 500) %&gt;% \n  ggplot(aes(x = State, y = `# Words (Risks and Challenges)`, fill = State)) +\n  geom_boxplot(alpha = 0.5, show.legend = FALSE) +\n  scale_y_log10() +\n  labs(title = \"# Words (R&C) more than 500\")\n\negg::ggarrange(p_wrc, p_wrc500, ncol = 2)\n\n\n\n\n\nA nonlinear relationship: number of words in risk and challenges: similar median in all samples, more failure among cases more than 500 words."
  },
  {
    "objectID": "d3graph.html",
    "href": "d3graph.html",
    "title": "4  Interactive graph",
    "section": "",
    "text": "Please select the type of chart that you would like to view:\n\nProportions Total Count\n\n\n\nOrder by:\n\nSuccess Rate Total Count\n\n\n\n\n\n\nThis interactive graph displays the successful and failed projects by category, as a stacked bar chart. The default view is a stacked bar chart of the proportion of successful projects for each category, ordered by the success rate of that category. This view shows that categories for entertainment like dance, theater, music, and comics had the highest proportion of successful projects, while fashion and technology had the least.\n\n\nThe viewer can also choose to look at a stacked bar chart of the total counts of each category, ordered by the total count of each category. The most common categories are Film & Video, Music, and Publishing, while the least common categories are Crafts and Journalism. We can see that the top 3 most popular categories are quite different from each other. Nonetheless, some of the common features that they share are art, entertainment, and digital.\n\n\nNext, to see if the success rate is related to the size of the categories, the viewer can choose to look at a stacked bar chart of the total coounts of each category, ordered by the success rate of the category. For the most part, we found that the most common project categories did not have the highest proportion of successful projects. For instance, the total count of projects in Dance and Theater are relatively low, but they have the highest success rates. However, the Music category is the second largest and has the third highest success rate, while the Film & Video category is the largest and has the fifth highest success rate.\n\n\nThe viewer can also choose to look at a stacked bar chart of the proportion of successful projects for each category, ordered by total count of projects in each cateogry, if they are interested in seeing how the success rate varies by the size of each category. Once again, we can see that there is not much relationship between the number of projects in a category and the average success rate of projects in that category. Rather, the success rate seems to vary across the project categories. Some of the larger categories, such as Music, have higher average success rate, while some of the smaller categories, like Dance, Theater, and Comics, also have relatively high average success rates."
  },
  {
    "objectID": "conclusion.html",
    "href": "conclusion.html",
    "title": "5  Conclusion",
    "section": "",
    "text": "Our analysis gave us insights about the types of projects that are on Kickstarter. In particular, we found that the most common categories for the projects in our dataset were Film & Video, Music, and Publishing. This indicates that most of the projects tend to be creative in nature, as well as artistic and digital. Moreover, we could see that most of the projects were located in the United States, though there were also many located in Europe and dispersed across the other continents.\nBy comparing the projects that were successful to the projects that failed, we were also able to identify some patterns. For instance, whether or not the project was Facebook connected did not have much of an effect on whether or not it was successful. However, projects that were successful tended to have videos included with them, as well as more Facebook shares and more updates. Moreover, the categories with the highest proportion of successful projects were Dance, Theater, and Music. While Music was one of the most common categories for projects, Dance and Theater were some of the least common categories. This suggests that there may be a difference in the project creators’ interests compared to the project backers’ interests. We also found that the correlation between the amount pledged and the goal for the successful projects was close to 1 for successful projects. The amount pledged usually does not drastically exceed the project goal, which indicates that the behavior of the backers is influenced by the goal of the projects.\nSome of the limitations we faced in our analysis came from the dataset itself, as it only contains a subset of the vast number of projects on the Kickstarter website. The project start dates only range from December 2013 to June 2014. To get a more comprehensive view of all the projects on Kickstarter, we may want to instead randomly sample from all of the projects on Kickstarter, from when the website was launched until the present day. Moreover, the dataset was a stratified sample of the Kickstarter projects, with a roughly equal number of successful and failed projects. To get a more accurate picture of the proportion of successful and failed projects on Kickstarter overall, we may want to take a random sample instead of a random stratified sample. Finally, the dataset is focused on the creators of the projects, with no little information about the backers of the projects. Going forward, because the behaviors of the backers plays an important role in the success of a project, we may also want to collect data on the characteristics of project backers on Kickstarter.\nSome of the lessons we learned were that some data visualizations, such as parallel coordinate plots and interactive scatterplots, can be unwieldy if we are dealing with very large datasets. We utilized them for gaining insights on a smaller sample of the data, though sometimes, the insights did not generalize to the larger datasets. Thus, there is always the need for verification using the entire dataset."
  }
]