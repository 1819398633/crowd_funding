# Data

Our main data source will be six months of data about Kickstarter crowdfunding projects, from December 15, 2013 to to June 15, 2014, collected using kickspy by Professor Chandan Reddy. The dataset is available on this website: http://dmkd.cs.vt.edu/projects/crowdfunding/dataset.htm, and we will be using the 18k_Projects.csv file. The dataset was used in research papers, including https://creddy.net/papers/WSDM16b.pdf. Projects that were canceled, suspended, or had less than one backer and \$100 as pledged amount were excluded from this dataset. Thus, we will not be able to gain any insights on these types of crowdfunding projects. Data was also collected from social media sites by Professor Reddy's research group, where it was available. Here, the main issue is that there may not be data values available for some of the projects, if they were not shared on social media.

The data is formatted as a csv file, and it has not been updated since the initial collection. We will download the data locally and read it using R. There are 18,142 rows and 35 columns in the dataset. It contains information about the Kickstarter projects, including the ID, name, URL, state (failed or successful), currency in which the donations were raised, the category of the projects, the creator of the project, location, the number of updates, the number of comments on the page, rewards (collected by the backer if the project is successful), the goal (or the target amount of money that the creator hopes to raise), the amount of money pledged, the number of backers, the start and end dates of the project, the duration of the project in days, columns to indicate whether the project has a video, and the longitude and latitude coordinates. Moreover, there is information about the creator, including their social media and bio pages.

## Description

To understand the different types of projects that are on Kickstarter, we could look at the projects by category, as well as the most common key words in the names of the projects. Whether the project is successful or not is indicated by the State column, so we can facet based on State to determine if there are distinguishing characteristics specific to the projects that are successful. The dataset also provides information about the creator, such as the number of Facebook friends that they have if they've connected their Facebook to their page, and the number of Facebook shares for their project. The dataset also contains information about the creator pages, including the number of other projects that the creator has created, as well as the amount of content of these pages (including the number of images and videos, the number of words in the Description and Risks and Challenges sections, and the number of FAQs). These are all numerical quantities, for which we could create data visualizations.

We can also use the Goal column to visualize the target amount of donations for the projects, as well as the Pledged column to display the amount of money that is actually raised. Since different currencies are used for the projects, we would have to standardize to USD.

Since we are given the start and end times of the projects, we can plot the number of active projects at a given time. This can be further broken down into the successful and failed projects, to determine if the dates during which the project ran had an effect on whether the project was successful. To get the average amount of money that the project backers will donate to a project, we can divide the amount pledged by the number of backers. Faceting on whether the project was successful or not will give us more insight on how the distribution of the average amount backers donated to a project may differ.

## Missing value analysis

Import data:

```{r, include=FALSE, echo=FALSE}
library(tidyverse)
library(dplyr)
library(ggplot2)
library(readr)
library(redav)
options(warn = -1)
```

```{r}
raw_df = read_tsv('18k_Projects.csv', show_col_types = FALSE)
raw_df = raw_df %>% select(c(-Url, -`Start Timestamp (UTC)`, -`End Timestamp (UTC)`))

col_na = colSums(is.na(raw_df)) %>%
  sort(decreasing = TRUE)
col_na = col_na[col_na > 0]
col_na
```

The latitude and longitude have the most missing values, following by the creator website, Facebook friend number, creator's number of projects backed, number of videos on the page, and number of words in the "Risk and Challenges" section. It seems the missing values of (`Latitude`, `Longitude`) and (`# Videos`, `# Words (Risks and Challenges`) feature pairs appear at the same time.

To have a further look, we plot the missing value patterns:

```{r fig.width=8}
raw_df_miss = raw_df %>% 
  select (col_na %>% names())
names(raw_df_miss) = c('Lat.', 'Long.', 'Cre.Web.', 'FB.Con.', 'Cre.numB', 'num.Video', 'num.WoRC')

raw_df_miss %>% 
  plot_missing(percent = TRUE)
```

For features, there are around 50% of (`Latitude`, `Longitude`) pairs missing. `Creator Website` and `Facebook Connected` are also common missing values.

For data rows, most of them (around 25%) are missing the `Facebook Connected` information only. This is reasonable for the missing values of the creator's Facebook and creator's website, as they may not exist or are not shown on the crowd funding page.

We also identify several patterns:

First, the graph shows that (`Latitude`, `Longitude`) and (`# Videos`, `# Words (Risks and Challenges`) missing feature pairs appear at the same time. Upon further inspection, we find that it is very similar to \`Location\`, as the (`Latitude`, `Longitude`) coordinates are usually the same for a location. For spacial analysis purpose, we decided to use \`Location\` only.

Second, we find that the missing values for `# Videos`, `# Words (Risks and Challenges` tend to appear together with \`Creator Website\`, `Latitude`, and `Longitude`. Such cases are rare and only appear from January, 2014 to March, 2014. We checked the crowdfunding webpages and found the data are accessible. Therefore, manually errors or technical issues in data gathering may be the reason why these values are missing.

```{r}
#TODO
```

Third, `Facebook Friends` is missing if and only if `Facebook Connected` is `False`, which is reasonable.

```{r}
raw_df %>% filter(`Facebook Connected` == 'Yes' & is.na(`Facebook Friends`))
raw_df %>% filter(`Facebook Connected` == 'No' & (!is.na(`Facebook Friends`)))
```
